---
title: "2020-penta"
---

## Packages

```{r pkgs}
#| message: false
library(tidyverse)
theme_set(theme_light())
library(mgcv)
library(tidygam)
```

## Read data

```{r eng-hist}
eng_hist <- read_csv("data/eng_hist.csv")

eng_filt <- eng_hist %>%
  filter(Include == 1) %>%
  mutate(
    period = case_when(
      EnglishPeriod == "OE" ~ 1,
      EnglishPeriod == "ME" ~ 2,
      EnglishPeriod == "eModE" ~ 3,
      EnglishPeriod == "lModE" ~ 4
    ),
    EnglishPeriod = factor(EnglishPeriod, levels = c("OE", "ME", "eModE", "lModE")),
    Pentaset = factor(Pentaset, levels = c("Identity", "Inferred", "Assumed", "Inert", "New")),
    TextId = as.factor(TextId),
    cent = ifelse(
      str_length(Date) == 3,
      str_sub(Date, 1, 1),
      str_sub(Date, 1, 2)
    ) %>% as.numeric() + 1,
    genre = str_to_lower(Genre) %>%
      str_sub(1, 3)
  )

eng_count <- eng_filt %>%
  group_by(EnglishPeriod, period, TextId, Pentaset, Words) %>%
  count()

eng_count_date <- eng_filt %>%
  group_by(cent, TextId, Pentaset, Words) %>%
  count()

eng_count_genre <- eng_filt %>%
  group_by(EnglishPeriod, period, TextId, Pentaset, Words, genre) %>%
  count()
```

## Data checks

```{r check}
table(is.na(eng_hist$TextId))
table(is.na(eng_hist$Pentaset))
```

```{r na}
table(is.na(eng_filt$TextId))
table(is.na(eng_filt$Pentaset))
```

```{r counts}
eng_filt %>%
  count(EnglishPeriod)
eng_filt %>%
  count(Pentaset)
eng_filt %>%
  count(EnglishPeriod, Pentaset)
```

```{r check-plot}
eng_filt %>%
  ggplot(aes(EnglishPeriod)) +
  geom_bar()
eng_filt %>%
  ggplot(aes(Pentaset)) +
  geom_bar()
eng_filt %>%
  ggplot(aes(EnglishPeriod, fill = Pentaset)) +
  geom_bar() +
  scale_fill_brewer(palette = "Set1")
eng_filt %>%
  ggplot(aes(EnglishPeriod, fill = Pentaset)) +
  geom_bar(position = "fill") +
  scale_fill_brewer(palette = "Set1")
eng_filt %>%
  ggplot(aes(EnglishPeriod, fill = Pentaset)) +
  geom_bar(position = "dodge") +
  scale_fill_brewer(palette = "Set1")
```

```{r plot}
eng_count %>%
  ggplot(aes(period, n, colour = Pentaset)) +
  geom_jitter(alpha = 0.2) +
  facet_wrap(~ Pentaset)

eng_count %>%
  ggplot(aes(period, n/Words, colour = Pentaset)) +
  geom_jitter(alpha = 0.2) +
  facet_wrap(~ Pentaset)
```

```{r genre}
eng_filt %>%
  group_by(genre, Pentaset) %>%
  summarise(
    words = sum(Words),
    n = cumsum(n()),
    n_rel = n/words,
    .groups = "drop"
  ) %>%
  ggplot(aes(Pentaset, n_rel, fill = Pentaset)) +
  geom_bar(stat = "identity") +
  facet_wrap(genre ~.)
```

```{r obj-type}
eng_filt %>%
  group_by(ft_objNP_type, Pentaset) %>%
  summarise(
    words = sum(Words),
    n = cumsum(n()),
    n_rel = n/words,
    .groups = "drop"
  ) %>%
  ggplot(aes(Pentaset, n_rel, fill = Pentaset)) +
  geom_bar(stat = "identity") +
  facet_wrap(ft_objNP_type ~.)
```

## GAMs

### Period and Pentaset

```{r gam-1}
if (file.exists("./data/cache/gam_1.rds")) {
  gam_1 <- readRDS("./data/cache/gam_1.rds")
} else {
  gam_1 <- bam(
    n ~
      Pentaset +
      s(period, by = Pentaset, k = 3) +
      s(TextId, bs = "re", m = 1) +
      offset(log(Words/100000)),
    data = eng_count,
    family = poisson,
    discrete = TRUE
  )
  saveRDS(gam_1, "./data/cache/gam_1.rds")
}
```

```{r gam-1-pred}
predict_gam(
  gam_1, series = "period",
  values = c("Words" = 1e+5),
  exclude_terms = "s(TextId)",
  length_out = 50, tran_fun = exp
) %>%
  plot(comparison = "Pentaset") +
  geom_vline(xintercept = c(1:4), linetype = "dotted") +
  scale_color_brewer(type = "qual", palette = "Set1") +
  scale_fill_brewer(type = "qual", palette = "Set1") +
  scale_x_continuous(labels = c("OE", "ME", "eModE", "lModE"), minor_breaks = NULL) +
  labs(
    y = "Number of PP per 100k words" 
  )

ggsave("img/period-penta.png", width = 7, height = 5)
```

We fitted a generalised additive mixed-effects model to the number of prepositional phrases, using a Poisson distribution. We included the following terms (in parentheses, an explanation of how the term contributes to the model): Pentaset (Identity, Inferred, Assumed, Inert, New), as a parametric term (average number of prepositional phrases according to Pentaset), a smooth over Period (OE, ME, eModE, lModE) by Pentaset (change in number of prepositional phrases over Period by Pentaset), and a by-text factor smooth over period (to account for variations between texts). An offset term was also included to account for the fact that length (in words) differed across texts. The reported estimates are the number of prepositional phrases assuming a text length of 100k words.

The number of Identity PPs decreases from Old English to Late Modern English, while Inferred PPs show a less pronounced increase, especially after Middle English. The number of Inert PPs seems to decrease from Old to Middle English, while it increases again by Late Modern English. The opposite pattern can be observed in the New PPs: after increasing from Old to Middle English, they decrease again by Late Modern English. Assumed PPs are overall less frequent and don't show clear patterns of change through time, perhaps with the exception of a small increase between Early and Late Modern English.

### Date and Pentaset

```{r gam-2}
if (file.exists("./data/cache/gam_2.rds")) {
  gam_2 <- readRDS("./data/cache/gam_2.rds")
} else {
  gam_2 <- bam(
    n ~
      Pentaset +
      s(cent, by = Pentaset, k = 4) +
      s(TextId, bs = "re", m = 1) +
      offset(log(Words/100000)),
    data = eng_count_date,
    family = poisson,
    discrete = TRUE
  )
  saveRDS(gam_2, "./data/cache/gam_2.rds")
}
```

```{r gam-2-pred}
predict_gam(
  gam_2, series = "cent",
  values = c("Words" = 1e+5),
  exclude_terms = "s(TextId)",
  length_out = 50, tran_fun = exp
) %>%
  plot(comparison = "Pentaset") +
  scale_color_brewer(type = "qual", palette = "Set1") +
  scale_fill_brewer(type = "qual", palette = "Set1") +
  labs(
    y = "Number of PP per 100k words" 
  )

ggsave("img/cent-penta.png", width = 7, height = 5)
```

### 
